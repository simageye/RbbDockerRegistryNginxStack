version: '3'

services:

  rbbdockerregnginx:
    image: registry_rbbdockerregnginx:1.15.2
    container_name: rbbdockerregnginx
    labels:
      com.rbbdockerregnginx.description: "RBB Private Registry"
      com.rbbdockerregnginx.department: "TPS-O"
    build:
      context: ./registry_dockerfile_nginx
      dockerfile: Dockerfile
    volumes:
      - ./registry_data_nginx/:/etc/nginx:ro
      #- ./registry_data_nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - static:/srv/Portus/public:ro
    network_mode: "service:rbbdockerregportusmariadb"


#  rbbdockerregportusclair:
#    image: quay.io/coreos/clair:v2.0.2
#    restart: unless-stopped
#    depends_on:
#      - postgres
#    links:
#      - postgres
#    ports:
#      - "6060-6061:6060-6061"
#    volumes:
#      - /tmp:/tmp
#      - ./examples/compose/clair/clair.yml:/clair.yml
#    command: [-config, /clair.yml]



  rbbdockerregportusb:
    image: registry_rbbdockerregportusb:2.3.5
    container_name: rbbdockerregportusb
    labels:
      com.rbbdockerreg.description: "RBB Private Registry Portus web interface"
      com.rbbdockerreg.department: "TPS-O"
    build:
      context: ./registry_dockerfile_portus
      dockerfile: Dockerfile
    depends_on:
      - rbbdockerregportus
      - rbbdockerregportusmariadb
    environment:
      # Theoretically not needed, but cconfig's been buggy on this...
      - CCONFIG_PREFIX=PORTUS
      - PORTUS_MACHINE_FQDN_VALUE=${MACHINE_FQDN}

      # DB. The password for the database should definitely not be here. You are
      # probably better off with Docker Swarm secrets.
      - PORTUS_DB_HOST=rbbdockerregportusmariadb
      - PORTUS_DB_DATABASE=portus_production
      - PORTUS_DB_PASSWORD=${DATABASE_PASSWORD}
      - PORTUS_DB_POOL=5

      # Secrets. It can possibly be handled better with Swarm's secrets.
      - PORTUS_SECRET_KEY_BASE=${PORTUS_SECRET_KEY_BASE}
      - PORTUS_PASSWORD=${PORTUS_PASSWORD}
      - PORTUS_KEY_PATH=/certificates/domain.key

      - PORTUS_BACKGROUND=true
      - RAILS_SERVE_STATIC_FILES=false

      # SSL
      - PORTUS_REGISTRY_OPENSSL_VERIFY_MODE=none

      # Additional Settings
      - PORTUS_DELETE_ENABLED=true
      - PORTUS_CHECK_SSL_USAGE_ENABLED=false
      - PORTUS_BACKGROUND_SYNC_STRATEGY=on-start
      - PORTUS_LOG_LEVEL=debug
    volumes:
      - ./registry_data_nginx/conf.d/:/certificates:ro
      - ./registry_data_nginx/conf.d/:/usr/local/share/ca-certificates/docker-dev-cert
      - ./registry_data_portus:/data
      #- ./registry_data_portus:/srv/Portus
    network_mode: "service:rbbdockerregportusmariadb"



  rbbdockerregportus:
    image: registry_rbbdockerregportus:2.3.5
    container_name: rbbdockerregportus
    labels:
      com.rbbdockerreg.description: "RBB Private Registry Portus web interface"
      com.rbbdockerreg.department: "TPS-O"
    build:
      context: ./registry_dockerfile_portus
      dockerfile: Dockerfile
    environment:
      # Theoretically not needed, but cconfig's been buggy on this...
      - CCONFIG_PREFIX=PORTUS
      - PORTUS_MACHINE_FQDN_VALUE=${MACHINE_FQDN}

      - PORTUS_DB_HOST=rbbdockerregportusmariadb
      - PORTUS_DB_DATABASE=portus_production
      - PORTUS_DB_PASSWORD=${DATABASE_PASSWORD}
      - PORTUS_DB_POOL=5

      # Secrets. It can possibly be handled better with Swarm's secrets.
      - PORTUS_SECRET_KEY_BASE=${PORTUS_SECRET_KEY_BASE}
      - PORTUS_PASSWORD=${PORTUS_PASSWORD}
      - PORTUS_KEY_PATH=/certificates/domain.key

      ## false = NGinx, true = puma; is serving the assets instead of Puma
      - RAILS_SERVE_STATIC_FILES=false
      #- PORTUS_PUMA_TLS_KEY=/certificates/domain.key
      #- PORTUS_PUMA_TLS_CERT=/certificates/domain.crt
      #- PORTUS_PUMA_HOST=0.0.0.0:3000

      ## Clair
      #- PORTUS_SECURITY_CLAIR_SERVER=http://clair:6060

      # Additional configs:
      - PORTUS_DELETE_ENABLED=true
      - PORTUS_SIGNUP_ENABLED=false
      - PORTUS_CHECK_SSL_USAGE_ENABLED=false
    volumes:
      - ./registry_data_nginx/conf.d/:/certificates:ro
      - ./registry_data_nginx/conf.d/:/usr/local/share/ca-certificates/docker-dev-cert
      - static:/srv/Portus/public
    network_mode: "service:rbbdockerregportusmariadb"



  rbbdockerregportusmariadb:
    image: registry_rbbdockerregportusmariadb:2.6.2
    container_name: rbbdockerregportusmariadb
    labels:
      com.rbbdockerreg.description: "RBB Private Registry"
      com.rbbdockerreg.department: "TPS-O"
    build:
      context: ./registry_dockerfile_mariadb
      dockerfile: Dockerfile
    environment:
      - MYSQL_DATABASE=portus_production
      # the password shouldn't be handled like this.
      - MYSQL_ROOT_PASSWORD=${DATABASE_PASSWORD}
    command: mysqld --character-set-server=utf8 --collation-server=utf8_unicode_ci --init-connect='SET NAMES UTF8;' --innodb-flush-log-at-trx-commit=0
    volumes:
      - ./registry_data_mariadb:/var/lib/mysql
    ports:
      - 443:443                            # nginx
      #- 3000:3000                         # portus
      #- ${MACHINE_FQDN}:5000:5000         # dockerreg



  rbbdockerreg:
    image: registry_rbbdockerreg:2.6.2
    container_name: rbbdockerreg
    labels:
      com.rbbdockerreg.description: "RBB Private Registry"
      com.rbbdockerreg.department: "TPS-O"
    build:
      context: ./registry_dockerfile
      dockerfile: Dockerfile
    environment:
      #REGISTRY_STORAGE_FILESYSTEM_ROOTDIRECTORY: /data   # Siehe volumes var/lib/registry
      REGISTRY_STORAGE_DELETE_ENABLED: "true"

      REGISTRY_HTTP_SECRET: "FBD3D07B-563A-4B62-B80B-DB29F7751A00"

      ## Authentication
      REGISTRY_AUTH_TOKEN_REALM: https://${MACHINE_FQDN}/v2/token
      REGISTRY_AUTH_TOKEN_SERVICE: ${MACHINE_FQDN}
      REGISTRY_AUTH_TOKEN_ISSUER: ${MACHINE_FQDN}
      REGISTRY_AUTH_TOKEN_ROOTCERTBUNDLE: /secrets/domain.crt

      ## SSL
      #REGISTRY_HTTP_TLS_CERTIFICATE: /secrets/domain.crt
      #REGISTRY_HTTP_TLS_KEY: /secrets/domain.key

      # Portus endpoint
      REGISTRY_NOTIFICATIONS_ENDPOINTS: >
        - name: portus
          url: http://${MACHINE_FQDN}:3000/v2/webhooks/events
          timeout: 2000ms
          threshold: 5
          backoff: 1s

      # Additional options
      REGISTRY_STORAGE_DELETE_ENABLED: "true"

    command: ["/bin/sh", "/etc/docker/registry/init/init.sh"]
    volumes:
      - ./registry_data:/var/lib/registry
      - ./registry_data/init:/etc/docker/registry/init:ro
      - ./registry_data/conf/config.yml:/etc/docker/registry/config.yml:ro
      - ./registry_data_nginx/conf.d/:/secrets:ro
    network_mode: "service:rbbdockerregportusmariadb"



volumes:
  static:
    driver: local


##############################################################
# Test if registry is working: curl http://localhost:5000/v2/
# OUTPUT: {}
# DockerOUTPUT:
# rbbdockerreg         | time="2018-08-08T13:31:16Z" level=info msg="response completed" go.version=go1.7.6 http.request.host="127.0.0.1:5000" http.request.id=02ceb67f-f404-4277-a84c-39feee0216d9 http.request.method=GET http.request.remoteaddr="192.168.48.1:38350" http.request.uri="/v2/" http.request.useragent="curl/7.54.0" http.response.contenttype="application/json; charset=utf-8" http.response.duration=1.01551ms http.response.status=200 http.response.written=2 instance.id=2422cb38-9024-491f-981e-90cb4c3948b4 version=v2.6.2 
# rbbdockerreg         | 192.168.48.1 - - [08/Aug/2018:13:31:16 +0000] "GET /v2/ HTTP/1.1" 200 2 "" "curl/7.54.0"

# Test if registry is working via nginx: curl http://localhost:5043/v2/
# OUTPUT: {}
# rbbreg         | time="2018-08-09T09:18:18Z" level=info msg="response completed" go.version=go1.7.6 http.request.host="127.0.0.1:5043" http.request.id=fde9b2b6-187f-4efe-b2a0-0f6143e5804f http.request.method=GET http.request.remoteaddr=192.168.160.1 http.request.uri="/v2/" http.request.useragent="curl/7.54.0" http.response.contenttype="application/json; charset=utf-8" http.response.duration=1.130054ms http.response.status=200 http.response.written=2 instance.id=ed81eb86-f63c-4107-9fc9-1e188e37bc81 version=v2.6.2 
#rbbreg         | 192.168.160.3 - - [09/Aug/2018:09:18:18 +0000] "GET /v2/ HTTP/1.0" 200 2 "" "curl/7.54.0"
#rbbregnginx    | 192.168.160.1 - - [09/Aug/2018:09:18:18 +0000] "GET /v2/ HTTP/1.1" 200 2 "-" "curl/7.54.0" "-"
##############################################################


  #rbbdockerregnginx:
  #  image: registry_rbbdockerregnginx:1.15.2
  #  container_name: rbbdockerregnginx
  #  labels:
  #    com.rbbdockerregnginx.description: "RBB Private Registry"
  #    com.rbbdockerregnginx.department: "TPS-O"
  #  build:
  #    context: ./registry_dockerfile_nginx
  #    dockerfile: Dockerfile
  #  ports:
  #    - 443:443
  #  links:
  #    - rbbdockerreg:registry
  #  volumes:
  #    - ./registry_data_nginx/conf.d/:/etc/nginx/conf.d:ro





#  rbbdockerregportus:
#    image: registry_rbbdockerregportus:2.3
#    container_name: rbbdockerregportus
#    labels:
#      com.rbbdockerreg.description: "RBB Private Registry Portus web interface"
#      com.rbbdockerreg.department: "TPS-O"
#    build:
#      context: ./registry_dockerfile_portus
#      dockerfile: Dockerfile
#    command: bundle exec rails runner /srv/Portus/examples/development/compose/init.rb
#    environment:
#      - PORTUS_MACHINE_FQDN_VALUE=${MACHINE_FQDN}
#      - PORTUS_PUMA_HOST=0.0.0.0:3000
#      - PORTUS_CHECK_SSL_USAGE_ENABLED=false
#      - PORTUS_SECURITY_CLAIR_SERVER=http://clair:6060
#
#      - CCONFIG_PREFIX=PORTUS
#
#      - PORTUS_DB_HOST=db
#      - PORTUS_DB_PASSWORD=portus
#      - PORTUS_DB_POOL=5
#
#      - RAILS_SERVE_STATIC_FILES=true
##    ports:
##      - 3000:3000
##    depends_on:
##      - db
##    links:
##      - db
##    volumes:
##      - .:/srv/Portus

#   rbbdockerreg:
#    image: registry_rbbdockerreg:2.6.2
#    container_name: rbbdockerreg
#    labels:
#      com.rbbdockerreg.description: "RBB Private Registry"
#      com.rbbdockerreg.department: "TPS-O"
#    build:
#      context: ./registry_dockerfile
#      dockerfile: Dockerfile
#    ports:
#      - 127.0.0.1:5000:5000
#    environment:
#      REGISTRY_STORAGE_FILESYSTEM_ROOTDIRECTORY: /data
#    volumes:
#      - ./registry_data:/data


