version: '3'
services:
  rbbdockerregnginx:
    image: registry_rbbdockerregnginx:1.15.2
    container_name: rbbdockerregnginx
    labels:
      com.rbbdockerregnginx.description: "RBB Private Registry"
      com.rbbdockerregnginx.department: "TPS-O"
    build:
      context: ./registry_dockerfile_nginx
      dockerfile: Dockerfile
    ports:
      - 443:443
    volumes:
      - ./registry_data_nginx/conf.d/:/etc/nginx/conf.d:ro
      - static:/srv/Portus/public:ro
    links:
      - rbbdockerreg:registry
      - rbbdockerregportus:portus


  rbbdockerregportus:
    image: registry_rbbdockerregportus:2.3
    container_name: rbbdockerregportus
    labels:
      com.rbbdockerreg.description: "RBB Private Registry Portus web interface"
      com.rbbdockerreg.department: "TPS-O"
    build:
      context: ./registry_dockerfile_portus
      dockerfile: Dockerfile
    environment:
      - PORTUS_MACHINE_FQDN_VALUE=${MACHINE_FQDN}
      - CCONFIG_PREFIX=PORTUS

      - PORTUS_DB_HOST=rbbdockerregportusmariadb
      - PORTUS_DB_DATABASE=portus_production
      - PORTUS_DB_PASSWORD=${DATABASE_PASSWORD}
      - PORTUS_DB_POOL=5

      # Secrets. It can possibly be handled better with Swarm's secrets.
      - PORTUS_SECRET_KEY_BASE=${PORTUS_SECRET_KEY_BASE}
      - PORTUS_PASSWORD=${PORTUS_PASSWORD}
      - PORTUS_KEY_PATH=/certificates/domain.key

      - PORTUS_PUMA_HOST=0.0.0.0:3000
      - PORTUS_CHECK_SSL_USAGE_ENABLED=false
      - PORTUS_SECURITY_CLAIR_SERVER=http://clair:6060
      # SSL
      - PORTUS_PUMA_TLS_KEY=/certificates/domain.key
      - PORTUS_PUMA_TLS_CERT=/certificates/domain.crt
      # false = NGinx, true = puma; is serving the assets instead of Puma
      - RAILS_SERVE_STATIC_FILES='false'
    ports:
      - 3000:3000
    volumes:
      - ./registry_data_nginx/conf.d/:/certificates:ro
      - static:/srv/Portus/public
    links:
      - rbbdockerregportusmariadb


  rbbdockerregportusmariadb:
    image: registry_rbbdockerregportusmariadb:2.6.2
    container_name: rbbdockerregportusmariadb
    labels:
      com.rbbdockerreg.description: "RBB Private Registry"
      com.rbbdockerreg.department: "TPS-O"
    build:
      context: ./registry_dockerfile_mariadb
      dockerfile: Dockerfile
    environment:
      - MYSQL_DATABASE=portus_production
      # the password shouldn't be handled like this.
      - MYSQL_ROOT_PASSWORD=${DATABASE_PASSWORD}
    command: mysqld --character-set-server=utf8 --collation-server=utf8_unicode_ci --innodb-flush-log-at-trx-commit=0
              #--init-connect='SET NAMES UTF8;' 
    volumes:
      - ./registry_data_mariadb:/var/lib/mysql


  rbbdockerreg:
    image: registry_rbbdockerreg:2.6.2
    container_name: rbbdockerreg
    labels:
      com.rbbdockerreg.description: "RBB Private Registry"
      com.rbbdockerreg.department: "TPS-O"
    build:
      context: ./registry_dockerfile
      dockerfile: Dockerfile
    ports:
      - ${MACHINE_FQDN}:5000:5000
    environment:
      REGISTRY_STORAGE_FILESYSTEM_ROOTDIRECTORY: /data
    command: ["/bin/sh", "/etc/docker/registry/init/init.sh"]
    volumes:
      - ./registry_data:/data
      - ./registry_data/init:/etc/docker/registry/init:ro
      - ./registry_data_nginx/conf.d/:/secrets:ro
    links:
      - rbbdockerregportus:portus


volumes:
  static:
    driver: local


##############################################################
# Test if registry is working: curl http://localhost:5000/v2/
# OUTPUT: {}
# DockerOUTPUT:
# rbbdockerreg         | time="2018-08-08T13:31:16Z" level=info msg="response completed" go.version=go1.7.6 http.request.host="127.0.0.1:5000" http.request.id=02ceb67f-f404-4277-a84c-39feee0216d9 http.request.method=GET http.request.remoteaddr="192.168.48.1:38350" http.request.uri="/v2/" http.request.useragent="curl/7.54.0" http.response.contenttype="application/json; charset=utf-8" http.response.duration=1.01551ms http.response.status=200 http.response.written=2 instance.id=2422cb38-9024-491f-981e-90cb4c3948b4 version=v2.6.2 
# rbbdockerreg         | 192.168.48.1 - - [08/Aug/2018:13:31:16 +0000] "GET /v2/ HTTP/1.1" 200 2 "" "curl/7.54.0"

# Test if registry is working via nginx: curl http://localhost:5043/v2/
# OUTPUT: {}
# rbbreg         | time="2018-08-09T09:18:18Z" level=info msg="response completed" go.version=go1.7.6 http.request.host="127.0.0.1:5043" http.request.id=fde9b2b6-187f-4efe-b2a0-0f6143e5804f http.request.method=GET http.request.remoteaddr=192.168.160.1 http.request.uri="/v2/" http.request.useragent="curl/7.54.0" http.response.contenttype="application/json; charset=utf-8" http.response.duration=1.130054ms http.response.status=200 http.response.written=2 instance.id=ed81eb86-f63c-4107-9fc9-1e188e37bc81 version=v2.6.2 
#rbbreg         | 192.168.160.3 - - [09/Aug/2018:09:18:18 +0000] "GET /v2/ HTTP/1.0" 200 2 "" "curl/7.54.0"
#rbbregnginx    | 192.168.160.1 - - [09/Aug/2018:09:18:18 +0000] "GET /v2/ HTTP/1.1" 200 2 "-" "curl/7.54.0" "-"
##############################################################


  #rbbdockerregnginx:
  #  image: registry_rbbdockerregnginx:1.15.2
  #  container_name: rbbdockerregnginx
  #  labels:
  #    com.rbbdockerregnginx.description: "RBB Private Registry"
  #    com.rbbdockerregnginx.department: "TPS-O"
  #  build:
  #    context: ./registry_dockerfile_nginx
  #    dockerfile: Dockerfile
  #  ports:
  #    - 443:443
  #  links:
  #    - rbbdockerreg:registry
  #  volumes:
  #    - ./registry_data_nginx/conf.d/:/etc/nginx/conf.d:ro





#  rbbdockerregportus:
#    image: registry_rbbdockerregportus:2.3
#    container_name: rbbdockerregportus
#    labels:
#      com.rbbdockerreg.description: "RBB Private Registry Portus web interface"
#      com.rbbdockerreg.department: "TPS-O"
#    build:
#      context: ./registry_dockerfile_portus
#      dockerfile: Dockerfile
#    command: bundle exec rails runner /srv/Portus/examples/development/compose/init.rb
#    environment:
#      - PORTUS_MACHINE_FQDN_VALUE=${MACHINE_FQDN}
#      - PORTUS_PUMA_HOST=0.0.0.0:3000
#      - PORTUS_CHECK_SSL_USAGE_ENABLED=false
#      - PORTUS_SECURITY_CLAIR_SERVER=http://clair:6060
#
#      - CCONFIG_PREFIX=PORTUS
#
#      - PORTUS_DB_HOST=db
#      - PORTUS_DB_PASSWORD=portus
#      - PORTUS_DB_POOL=5
#
#      - RAILS_SERVE_STATIC_FILES=true
##    ports:
##      - 3000:3000
##    depends_on:
##      - db
##    links:
##      - db
##    volumes:
##      - .:/srv/Portus

#   rbbdockerreg:
#    image: registry_rbbdockerreg:2.6.2
#    container_name: rbbdockerreg
#    labels:
#      com.rbbdockerreg.description: "RBB Private Registry"
#      com.rbbdockerreg.department: "TPS-O"
#    build:
#      context: ./registry_dockerfile
#      dockerfile: Dockerfile
#    ports:
#      - 127.0.0.1:5000:5000
#    environment:
#      REGISTRY_STORAGE_FILESYSTEM_ROOTDIRECTORY: /data
#    volumes:
#      - ./registry_data:/data


